// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema
generator erd {
  provider = "prisma-erd-generator"
  output   = "./erd.md"
  // TODO: FK表現できないか
}

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model users {
  id            String       @id @db.Char(36)
  email         String       @unique @db.VarChar(255)
  password      String       @db.Char(60)
  age_group     Int          @db.SmallInt
  gender        Int          @db.SmallInt
  created_at    DateTime     @default(now()) @db.Timestamp(6)
  updated_at    DateTime     @updatedAt @db.Timestamp(6)
  prefecture_id String       @db.Char(36)
  prefecture    prefectures  @relation(fields: [prefecture_id], references: [id])
  arts_users    arts_users[]
  token         token[]
}

model prefectures {
  id    String  @id @db.Char(36)
  name  String  @unique @db.VarChar(4)
  users users[]
}

model institutions {
  id                        String              @id @db.Char(36)
  admission_fee_description String              @db.Text
  updated_at                DateTime            @updatedAt @db.Timestamp(6)
  arts_institutions         arts_institutions[]
}

model arts {
  id                     String              @id @db.Char(36)
  is_public              Boolean             @default(true)
  name                   String              @db.VarChar(255)
  name_kana              String              @db.VarChar(255)
  created_year           Int                 @db.Integer
  description            String              @db.Text
  image_path             String[]            @db.Text
  datetime_description   String              @db.Text
  closed_day_description String              @db.Text
  address                String              @db.VarChar(255)
  created_at             DateTime            @default(now()) @db.Timestamp(6)
  updated_at             DateTime            @updatedAt @db.Timestamp(6)
  author_id              String              @db.Char(36)
  arts_institutions      arts_institutions[]
  arts_users             arts_users[]
  authors                authors             @relation(fields: [author_id], references: [id])
}

model authors {
  id         String   @id @db.Char(36)
  name       String   @db.VarChar(255)
  name_kana  String   @db.VarChar(255)
  image_path String   @db.VarChar(255)
  create_at  DateTime @default(now()) @db.Timestamp(6)
  updated_at DateTime @updatedAt @db.Timestamp(6)
  arts       arts[]
}

model arts_institutions {
  art_id         String       @db.Char(36)
  institution_id String       @db.Char(36)
  art            arts         @relation(fields: [art_id], references: [id])
  institution    institutions @relation(fields: [institution_id], references: [id])

  @@id([art_id, institution_id])
}

model arts_users {
  art_id  String @db.Char(36)
  user_id String @db.Char(36)
  art     arts   @relation(fields: [art_id], references: [id])
  user    users  @relation(fields: [user_id], references: [id])

  @@id([art_id, user_id])
}

model token {
  id         Int       @id @default(autoincrement())
  token      String    @unique
  type       TokenType
  create_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime  @updatedAt @db.Timestamp(6)
  expired_at DateTime
  user       users     @relation(fields: [user_id], references: [id])
  user_id    String    @db.Char(36)
}

enum TokenType {
  PASSWORD_RESET
  EMAIL_CHANGE
}
